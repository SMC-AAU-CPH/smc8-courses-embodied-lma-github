#include "IIR4.h"

IIR4::IIR4(FilterType type, float cutoff)
{
	switch (type)
	{
	case LPF:
		makeLPF(cutoff);
		break;

	case LPD1:
		makeLPD1(cutoff);
		break;

	case LPD2:
		makeLPD2(cutoff);
		break;
	
	default:
		makeLPF(cutoff);
		break;
	}

	x0 = LeapJoint(0.0, 0.0, 0.0);
	x1 = LeapJoint(0.0, 0.0, 0.0);
	x2 = LeapJoint(0.0, 0.0, 0.0);
	x3 = LeapJoint(0.0, 0.0, 0.0);
	x4 = LeapJoint(0.0, 0.0, 0.0);
	y0 = LeapJoint(0.0, 0.0, 0.0);
	y1 = LeapJoint(0.0, 0.0, 0.0);
	y2 = LeapJoint(0.0, 0.0, 0.0);
	y3 = LeapJoint(0.0, 0.0, 0.0);
	y4 = LeapJoint(0.0, 0.0, 0.0);
}

void IIR4::makeLPF(float cutoff)
{
	if (cutoff == 0.1)
	{
		b0 = 0.1400982208;
		b1 = -0.0343775491;
		b2 = 0.0454003083;
		b3 = 0.0099732061;
		b4 = 0.0008485135;
		a0 = 1.0;
		a1 = -1.9185418203;
		a2 = 1.5929378702;
		a3 = -0.5939699187;
		a4 = 0.0814687111;
	}

	else if (cutoff == 0.2)
	{
		b0 = 0.1526249789;
		b1 = 0.0333481282;
		b2 = 0.0777551903;
		b3 = 0.0667145281;
		b4 = 0.0138945068;
		a0 = 1.0;
		a1 = -1.7462227354;
		a2 = 1.7354077932;
		a3 = -0.8232679111;
		a4 = 0.1793463694;
	}

	else if (cutoff == 0.3)
	{
		b0 = 0.1851439645;
		b1 = 0.1383283833;
		b2 = 0.1746892243;
		b3 = 0.1046627716;
		b4 = 0.0464383730;
		a0 = 1.0;
		a1 = -1.2982434912;
		a2 = 1.4634092217;
		a3 = -0.7106501488;
		a4 = 0.2028836637;
	}

	else if (cutoff == 0.4)
	{
		b0 = 0.2680960849;
		b1 = 0.5174415712;
		b2 = 0.5839923942;
		b3 = 0.3748650443;
		b4 = 0.1199394960;
		a0 = 1.0;
		a1 = 0.0324610402;
		a2 = 0.7694515981;
		a3 = -0.0071430949;
		a4 = 0.0714586993;
	}

	else if (cutoff == 0.5)
	{
		b0 = 0.3730569536;
		b1 = 0.8983119412;
		b2 = 0.9660856693;
		b3 = 0.5189611913;
		b4 = 0.1099005390;
		a0 = 1.0;
		a1 = 0.8053107424;
		a2 = 0.8110594452;
		a3 = 0.2371869724;
		a4 = 0.0849291749;
	}

	else
	{
		b0 = 1.0;
		b1 = 0.0;
		b2 = 0.0;
		b3 = 0.0;
		b4 = 0.0;
		a0 = 1.0;
		a1 = 0.0;
		a2 = 0.0;
		a3 = 0.0;
		a4 = 0.0;
	}
}

void IIR4::makeLPD1(float cutoff)
{
	if (cutoff == 0.1)
	{
		b0 = -0.1543174259;
		b1 = 0.1742393427;
		b2 = -0.0178886989;
		b3 = -0.0022975713;
		b4 = 0.0002643535;
		a0 = 1.0;
		a1 = -2.057494776;
		a2 = 1.858705877;
		a3 = -0.801785135;
		a4 = 0.131076358;
	}

	else if (cutoff == 0.2)
	{
		b0 = 0.1973679432;
		b1 = -0.0056567353;
		b2 = -0.0321850947;
		b3 = -0.1099445540;
		b4 = -0.0495815592;
		a0 = 1.0;
		a1 = -0.9870779094;
		a2 = 0.7774863652;
		a3 = -0.2206843188;
		a4 = 0.02813441289;
	}

	else if (cutoff == 0.3)
	{
		b0 = 0.2712475020;
		b1 = 0.1323672597;
		b2 = -0.0487267360;
		b3 = -0.1783422292;
		b4 = -0.1765457966;
		a0 = 1.0;
		a1 = -0.2919477037;
		a2 = 0.5104653639;
		a3 = -0.01557831719;
		a4 = 0.000283848732;
	}

	else if (cutoff == 0.4)
	{
		b0 = -0.3453135426;
		b1 = -0.1914474803;
		b2 = 0.0747940184;
		b3 = 0.2519130203;
		b4 = 0.2100539842;
		a0 = 1.0;
		a1 = -0.09449724871;
		a2 = 0.7354550061;
		a3 = -0.1362890086;
		a4 = 0.075249263;
	}

	else if (cutoff == 0.5)
	{
		b0 = -0.4565845496;
		b1 = -0.3412669800;
		b2 = 0.1339011848;
		b3 = 0.4087476487;
		b4 = 0.2552026961;
		a0 = 1.0;
		a1 = 0.4053572816;
		a2 = 0.7861200479;
		a3 = -0.01658829946;
		a4 = 0.103079108;
	}

	else
	{
		b0 = 1.0;
		b1 = 0.0;
		b2 = 0.0;
		b3 = 0.0;
		b4 = 0.0;
		a0 = 1.0;
		a1 = 0.0;
		a2 = 0.0;
		a3 = 0.0;
		a4 = 0.0;
	}
}

void IIR4::makeLPD2(float cutoff)
{
	if (cutoff == 0.1)
	{
		b0 = -0.0738989849;
		b1 = 0.1351624829;
		b2 = -0.0512998379;
		b3 = -0.0072918334;
		b4 = -0.0026718267;
		a0 = 1.0;
		a1 = -1.628286742;
		a2 = 1.418759018;
		a3 = -0.6223424612;
		a4 = 0.1085280231;
	}

	else if (cutoff == 0.2)
	{
		b0 = -0.0795571277;
		b1 = 0.1390709784;
		b2 = -0.0479192600;
		b3 = -0.0031459045;
		b4 = -0.0084486862;
		a0 = 1.0;
		a1 = -1.571029458;
		a2 = 1.459212744;
		a3 = -0.7173743414;
		a4 = 0.1488005975;
	}

	else if (cutoff == 0.3)
	{
		b0 = 0.1099156485;
		b1 = -0.1289124440;
		b2 = -0.0372667405;
		b3 = 0.0216082189;
		b4 = 0.0346553170;
		a0 = 1.0;
		a1 = -0.8274946715;
		a2 = 0.8110775672;
		a3 = -0.3530877871;
		a4 = 0.06598917583;
	}

	else if (cutoff == 0.4)
	{
		b0 = 0.1395922313;
		b1 = -0.1222824625;
		b2 = -0.0923902820;
		b3 = -0.0067409738;
		b4 = 0.0818214870;
		a0 = 1.0;
		a1 = -0.3633175924;
		a2 = 0.6359593486;
		a3 = -0.2984125636;
		a4 = 0.06773100371;
	}

	else if (cutoff == 0.5)
	{
		b0 = 0.2032072414;
		b1 = -0.0963599828;
		b2 = -0.2483531617;
		b3 = -0.0270426939;
		b4 = 0.1685485970;
		a0 = 1.0;
		a1 = 0.6158413681;
		a2 = 0.5207334231;
		a3 = -0.003833685163;
		a4 = 0.01809833326;
	}

	else
	{
		b0 = 1.0;
		b1 = 0.0;
		b2 = 0.0;
		b3 = 0.0;
		b4 = 0.0;
		a0 = 1.0;
		a1 = 0.0;
		a2 = 0.0;
		a3 = 0.0;
		a4 = 0.0;
	}
}
LeapJoint IIR4::process(LeapJoint x)
{
	x0 = x;
	y0 = b0 * x0 + b1 * x1 + b2 * x2 + b3 * x3 + b4 * x4 - a1 * y1 - a2 * y2 - a3 * y3 - a4 * y4;

	x4 = x3;
	x3 = x2;
	x2 = x1;
	x1 = x0;
	y4 = y3;
	y3 = y2;
	y2 = y1;
	y1 = y0;

	return y0;
}